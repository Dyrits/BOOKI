@use "sass:map";

@function dynamic-size($viewport, $size) {
  $viewport: $viewport;
  @if $viewport == 768 { $viewport: 375; }
  @if $viewport == 1440 { @return min(calc(100 / #{ $viewport } * #{ $size }vw), #{ $size }px); }
  @else { @return calc(100 / #{ $viewport } * #{ $size }vw); }
}

@mixin dynamic-sizes($property, $default-size, $viewport-sizes: (1024 : $default-size, 768 : $default-size), $breakpoint-type: max-width) {
  $viewport-sizes: map.merge((1024 : $default-size, 768 : $default-size), $viewport-sizes);
  #{ $property }: #{ dynamic-size(1440, $default-size) };
  @each $viewport, $size in $viewport-sizes {
    @media ($breakpoint-type: "#{ $viewport }px") {
      #{ $property }: #{ dynamic-size($viewport, $size) };
    }
  }
}

@mixin dynamic-values($property, $default-value, $viewport-values: (1024 : $default-value, 768 : $default-value), $breakpoint-type: max-width) {
  $viewport-values: map.merge((1024 : $default-value, 768 : $default-value), $viewport-values);
  #{ $property }: #{ $default-value };
  @each $viewport, $value in $viewport-values {
    @media ($breakpoint-type: "#{ $viewport }px") {
      #{ $property }: #{ $value };
    }
  }
}

@mixin text-bold($font-size) {
  @include dynamic-sizes(font-size, $font-size);
  font-weight: 700;
}

@mixin border-solid($border-width, $border-color) {
  @include dynamic-sizes(border-width, 1);
  border-style: solid;
  border-color: $border-color;
}

@mixin border-radius($top-left, $top-right, $bottom-right, $bottom-left) {
  @include dynamic-sizes(border-top-left-radius, $top-left);
  @include dynamic-sizes(border-top-right, $top-right);
  @include dynamic-sizes(border-bottom-right, $bottom-right);
  @include dynamic-sizes(border-bottom-left-radius, $bottom-left);
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}